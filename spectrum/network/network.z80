; ----------------------------------------------------------------------
; Network module for ZX Spectrum
;
; This handles the RS232 communications
; ----------------------------------------------------------------------

; 0xEC00-0xF3FF available
                org     0xEC00

#include "../../teletextspectrum/teletext.inc"

;machineType     = 0xFF00    ; Loader sets this to the machine type

; Vector table
                jp  init            ; network module startup
vtp3:           jp  p3Close         ; 128K/plus3 vectors, default
netGet:         jp  p3Get
netPut:         jp  p3Put
init1:          jp  p3Init          ; Internal init vector for +3 or IF1
vtend:                              ; End of +3 specific, so vt48 will overwrite up to here
                jp  netSend         ; Send null terminated block
                jp  netGetline      ; Get line terminated with LF
                jp  getResponse     ; Get blocks from remote
                jp  nextBlock
                jp  lastBlock
                jp  countBlocks
                jp  findBlock

                                    ; Interface1 specific vectors, gets written to vtp3 on init
vt48:           jp if1Close         ; 48k matches layout of vtp3, will get
                jp if1Get           ; copied over vtp3 on start to switch the
                jp if1Put           ; code to use Interface 1
                jp if1Init

; ----------------------------------------------------------------------
; Init Network module
; ----------------------------------------------------------------------
init:           call    detectMachine       ; Check machine type
                jr      nz, init1           ; init the 128K port
                ld      hl, vt48            ; Copy interface 1 vectors over
                ld      de, vtp3            ; the +3 ones so they are active
                ld      bc, vtend-vtp3      ; Length of vectors unique to an interface
                ldir
                jr      init1               ; init the IF1 port

; Send null terminated string to remote host
netSend:        LD      A, (HL)
                OR      A
                RET     Z
                CALL    netPut
                INC     HL
                JR      netSend

#include "plus3/plus3.z80"
#include "if1/if1.z80"
#include "machinetype.z80"
#include "block.z80"

; Get a line terminated with an LF and store at 0xFF00
netGetline:     CALL    ngl3
ngl1:           CALL    netGet
                JR      NC, ngl1
                CALL oswrch
                CP      10
                JR      Z, ngl2
                LD      (HL), A
                INC     HL
                JR      ngl1
ngl2:           LD      A, 0
                LD      (HL), A
ngl3:           LD      HL, 0xFF00
                RET
